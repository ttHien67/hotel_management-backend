<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hotel.mappers.CustomerMapper">
    <select id="get" resultType="com.example.hotel.models.response.CustomerResponse">
        select * from customer
        <where>
            <if test="idCode != null and idCode != ''">
                and id_code = #{idCode}
            </if>
            <if test="name != null and name != ''">
                and name ILIKE CONCAT('%' || #{name} || '%')
            </if>
        </where>

        order by create_date

        <if test="limit > 0">
            OFFSET (#{page} - 1) * #{limit} FETCH NEXT #{limit} ROWS ONLY
        </if>
    </select>

    <select id="count" resultType="Integer">
        select count(*) from customer
        <where>
            <if test="idCode != null and idCode != ''">
                and id_code = #{idCode}
            </if>
            <if test="name != null and name != ''">
                and name ILIKE CONCAT('%' || #{name} || '%')
            </if>
        </where>
    </select>

    <select id="checkCustomer" resultType="com.example.hotel.models.response.CustomerResponse">
        select * from customer
        where id_code = #{idCode}
        limit 1;
    </select>

    <select id="create" resultType="com.example.hotel.models.response.CustomerResponse" parameterType="com.example.hotel.models.request.CustomerRequest">
        INSERT INTO customer(
            "name",
            "phone",
            "email",
            "room_id",
            "id_code",
            "create_date"
        )VALUES(
            #{name},
            #{phone},
            #{email},
            #{roomId},
            #{idCode},
            NOW()
        ) RETURNING *;
    </select>

    <select id="update" resultType="com.example.hotel.models.response.CustomerResponse" parameterType="com.example.hotel.models.request.CustomerRequest">
        UPDATE customer
        SET
            "name" = #{name},
            "phone" = #{phone},
            "email" = #{email},
            "room_id" = #{roomId},
            "edit_date" = NOW()
        WHERE id = #{id}::uuid
        RETURNING *;
    </select>

    <select id="delete" resultType="com.example.hotel.models.response.CustomerResponse" parameterType="String">
        DELETE FROM customer
        WHERE id = #{id}::uuid
        RETURNING *;
    </select>
</mapper>