<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hotel.mappers.EmployeeMapper">
    <select id="get" resultType="com.example.hotel.models.response.EmployeeResponse">
        select * from employee
        <where>
            <if test="code != null || code != ''">
                and code = #{code}
            </if>
            <if test="name != null || name != ''">
                and name ILIKE CONCAT('%' || #{name} || '%')
            </if>
        </where>

        order by create_date

        <if test="limit > 0">
            OFFSET (#{page} - 1) * #{limit} FETCH NEXT #{limit} ROWS ONLY
        </if>
    </select>

    <select id="count" resultType="Integer">
        select count(*) from employee
        <where>
            <if test="code != null || code != ''">
                and code = #{code}
            </if>
            <if test="name != null || name != ''">
                and name ILIKE CONCAT('%' || #{name} || '%')
            </if>
        </where>
    </select>

    <select id="checkEmployee" resultType="com.example.hotel.models.response.EmployeeResponse">
        select * from employee
        where code = #{code}
        limit 1;
    </select>

    <select id="create" resultType="com.example.hotel.models.response.EmployeeResponse" parameterType="com.example.hotel.models.request.EmployeeRequest">
        INSERT INTO employee(
            "name",
            "phone",
            "email",
            "address",
            "code",
            "salary",
            "position",
            "create_date"
        )VALUES(
            #{name},
            #{phone},
            #{email},
            #{address},
            #{code},
            #{salary},
            #{position},
            NOW()
        ) RETURNING *;
    </select>

    <select id="update" resultType="com.example.hotel.models.response.EmployeeResponse" parameterType="com.example.hotel.models.request.EmployeeRequest">
        UPDATE employee
        SET
            "name" = #{name},
            "phone" = #{phone},
            "email" = #{email},
            "address" = #{address},
            "salary" = #{salary},
            "position" = #{position},
            "edit_date" = NOW()
        WHERE id = #{id}::uuid
        RETURNING *;
    </select>

    <select id="delete" resultType="com.example.hotel.models.response.EmployeeResponse" parameterType="String">
        DELETE FROM employee
        WHERE id = #{id}::uuid
        RETURNING *;
    </select>
</mapper>